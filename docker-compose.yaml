version: '3.8'

services:
  db:
    image: postgres:16.1-alpine
    container_name: db
    restart: always
    volumes:
      - sunny_ekb_data:/var/lib/postgresql/data/
    env_file:
      - ./.env

  nginx:
    image: nginx:1.21.3-alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - sunny_static_value:/var/html/static/
      - sunny_media_value:/var/html/media/
      - ./certbot/letsencrypt:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/letsencrypt:ro
    depends_on:
      - backend

  certbot:
    image: nbraun1/certbot
    container_name: certbot
    depends_on:
      - nginx
    environment:
      EMAIL: solnechniy_ekb@mail.ru
      DOMAINS: sunnyekb.ru
      AUTHENTICATOR: webroot
      WEBROOT_PATH: /var/www/letsencrypt
      POST_HOOK_CMD: docker kill -s HUP $$(docker ps --filter "name=nginx" | awk '{print $$1}')
      CRON: "0 0 1 * *"
    volumes:
      - ./certbot/letsencrypt:/etc/letsencrypt
      - ./certbot/www:/var/www/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro

  redis:
    image: redis:alpine
    container_name: redis

  celery:
    image: ${DOCKER_HUB_USERNAME}/sunny_ekb:latest
    container_name: celery
    restart: always
    command: celery -A config worker -l INFO
    env_file:
      - .env
    depends_on:
      - backend
      - redis

  celery-beat:
    image: ${DOCKER_HUB_USERNAME}/sunny_ekb:latest
    container_name: beat
    restart: always
    command: celery -A config beat -l INFO
    env_file:
      - .env
    depends_on:
      - backend
      - redis

  flower:
    image: mher/flower
    container_name: flower
    command: ['celery', '--broker=redis://redis:6379/0', 'flower', '--port=5555', '--url_prefix=/flower']
    ports:
      - "5555:5555"
    depends_on:
      - celery
      - celery-beat

  backend:
    image: ${DOCKER_HUB_USERNAME}/sunny_ekb:latest
    container_name: backend
    restart: always
    volumes:
      - sunny_static_value:/app/static/
      - sunny_media_value:/app/media/
      - sunny_data_store_value:/app/data_store/
    depends_on:
      - db
      - redis
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    command: python3 -m daphne -b 0.0.0.0 -p 8000 config.asgi:application

  frontend:
    image: ${DOCKER_HUB_USERNAME}/sunny_ekb_frontend:latest
    container_name: frontend
    restart: always
    ports:
      - "3000:5173"

volumes:
  sunny_static_value:
  sunny_media_value:
  sunny_data_store_value:
  sunny_ekb_data:
